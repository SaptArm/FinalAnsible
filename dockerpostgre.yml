---
- hosts: all
  become: true
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3
          - python3-pip
          - virtualenv
          - python3-setuptools
          #- postgresql-server
          #- postgresql-contrib
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    #- name: "Find out if PostgreSQL is initialized"
    #  ansible.builtin.stat:
    #    path: "/var/lib/pgsql/data/pg_hba.conf"
    #  register: postgres_data

    #- name: "Initialize PostgreSQL"
    #  shell: "postgresql-setup initdb"
    #  when: not postgres_data.stat.exists
    
   # - name: Create a Superuser PostgreSQL database user
   ##   become: yes
    #  become_user: postgres
    ##  postgresql_user:
     #   name: admin
     #   password: password
     ##   role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE
      #  encrypted: yes
      #  state: present
    
   # - name: "Create app database"
   #   postgresql_db:
   #     state: present
   #     name: testbase
   #   become: yes
   #   become_user: postgres#


   # - name: "Grant db user access to app db"
   #   postgresql_privs:
   #     type: database
   #     database: testbase
   #     roles: admin
   #     grant_option: no
   #     privs: all
   #   become: yes
   #   become_user: postgres
  
    #- name: Create directory
    #  file: 
    #    path:  "{{ item }}"
    #    state: directory
    #  loop: 
    #    - /srv/app
    #    - /srv/app/conf
      